* GENERATED BY CHARMM-GUI (http://www.charmm-gui.org) v3.7 on Feb, 04. 2024. JOBID=0710632097
* GET A DIFFERENT CONFORMATION FOR LIPIDS PENETRATING PROTEIN / CHOL
*

DIMENS CHSIZE 5000000 MAXRES 3000000

! Read topology and parameter files
stream toppar.str

define PROT sele all end

! Read the system information
stream step3_size.str
stream step3_packing_pol.str

! Read HEAD spheres
! Read PSF and Coordinates
open read unit 10 card name step3_packing_head.psf
read psf  unit 10 card append

open read unit 10 card name step3_packing_head.crd
read coor unit 10 card append

calc Nlipid = @nliptop + @nlipbot

define STEROL sele ( resn CHL1 .or. resn ERG .or. resn DPOP .or. resn SITO .or. resn STIG -
                 .or. resn CHSD .or. resn CHSP .or. resn CAMP .or. resn GCAMP .or. resn GSITO -
                 .or. resn GSTIG .or. resn LANO .or. resn PGCAMP .or. resn PGSITO .or. resn PGSTIG -
                 ) end
set nsterol = ?nsel

coor stat

!==============================================================================
! Sorting the lipid spheres (resids) according to their distance to the XY center.
!

! dummy atom for the XY center
read sequence dum 2
generate dum setup first none last none
coor set xdir 0.0 ydir 0.0 zdir  12.0 sele segid dum .and. resid 1 end
coor set xdir 0.0 ydir 0.0 zdir -12.0 sele segid dum .and. resid 2 end

! Top leaflet
!
set LipidNum = 1
label dosort1

   coor stat sele segid head .and. resid @LipidNum end
   set resn1 = ?selresn
   set x1 = ?xave
   set y1 = ?yave
   set z1 = ?zave

   define target sele segid head .and. resid @LipidNum:@nliptop .and. prop Z .gt. 0 end
   coor mindist sele target end sele segid DUM .and. resid 1 end
   coor stat sele bynum ?MINDA1 end
   set resid2 = ?selresi
   set resn2 = ?selresn
   set x2 = ?xave
   set y2 = ?yave
   set z2 = ?zave

   coor set xdir @x2 ydir @y2 zdir @z2 sele segid head .and. resid @LipidNum end
   rename resname @resn2 sele segid head .and. resid @LipidNum end

   coor set xdir @x1 ydir @y1 zdir @z1 sele segid head .and. resid @resid2 end
   rename resname @resn1 sele segid head .and. resid @resid2 end

   label doskip1

   coor mindist sele segid head .and. resid @LipidNum end sele segid DUM .and. resid 1 end
   scalar wmain set ?mind sele segid head .and. resid @LipidNum end

increase LipidNum by 1
if LipidNum .le. @nliptop goto dosort1

! Bottom leaflet
!
label dosort2

   coor stat sele segid head .and. resid @LipidNum end
   set resn1 = ?selresn
   set x1 = ?xave
   set y1 = ?yave
   set z1 = ?zave

   define target sele segid head .and. resid @LipidNum:@Nlipid end
   coor mindist sele target end sele segid DUM .and. resid 2 end
   coor stat sele bynum ?MINDA1 end
   set resid2 = ?selresi
   set resn2 = ?selresn
   set x2 = ?xave
   set y2 = ?yave
   set z2 = ?zave

   coor set xdir @x2 ydir @y2 zdir @z2 sele segid head .and. resid @LipidNum end
   rename resname @resn2 sele segid head .and. resid @LipidNum end

   coor set xdir @x1 ydir @y1 zdir @z1 sele segid head .and. resid @resid2 end
   rename resname @resn1 sele segid head .and. resid @resid2 end

   label doskip2

   coor mindist sele segid head .and. resid @LipidNum end sele segid DUM .and. resid 2 end
   scalar wmain set ?mind sele segid head .and. resid @LipidNum end

increase LipidNum by 1
if LipidNum .le. @Nlipid goto dosort2

scalar wmain show sele segid head end   ! wamin = minimum distance from the XY center

delete atom sele segid DUM  end

!==============================================================================
! Randomly choosing the lipids and hydration water

!Random number generation for picking lipids
RAND UNIF ISEED 1707106476

set LipidNum = 1
set hasring = no

label loop_gen

   set cntrand = 0

   coor stat sele segid HEAD .and. resid @LipidNum end
   set lipid = ?selresn

   set issterol = no
   if lipid .eq. CHL1 then
      calc zpostop = 18
      set HG ( type C3 .or. type O3 )
      set issterol = yes
      goto repeatrand
   endif
   if lipid .eq. ERG then
      calc zpostop = 18
      set HG ( type C3 .or. type O3 )
      set issterol = yes
      goto repeatrand
   endif
   if lipid .eq. DPOP then
      calc zpostop = 18
      set HG ( type C3 .or. type O3 )
      set issterol = yes
      goto repeatrand
   endif
   if lipid .eq. SITO then
      calc zpostop = 18
      set HG ( type C3 .or. type O3 )
      set issterol = yes
      goto repeatrand
   endif
   
   stop ! the lipid type is not defined
   !prnlev 5

   label repeatrand

      calc cntrand = @cntrand + 1
      if cntrand .gt. 100 stop ! replacement may not work.. stop here

      set randn ?RAND
      if randn .le. 0.5 set Lipdir conf1   ! conf1 and conf2 are two directories
      if randn .gt. 0.5 set Lipdir conf2   ! containing lipid structures
      set randn ?RAND
      if randn .ge. 1.0 goto repeatrand
      calc N = int( @randn * 1000 ) + 1

      open read card unit 1 name lipid_lib/@lipid/@Lipdir/@lipid_@N.crd
      read sequence coor unit 1
      generate L@LipidNum setup noangle nodihedrals first none last none
      close unit 1

      open read card unit 1 name lipid_lib/@lipid/@Lipdir/@lipid_@N.crd
      read coor card unit 1 append
      close unit 1

      coor print sele ( .not. INIT ) end
      ic param
      ic build
      prnlev 0
      hbuild
      prnlev 5
      coor print sele ( .not. INIT ) end
      if ?nsel .gt. 0 stop

      label nextstep

      ! put the X-Y center of mass of the lipid head at the origin
      coor stat sele segid L@LipidNum .and. @HG end
      coor trans xdir -?XAVE ydir -?YAVE zdir -?ZAVE select segid L@LipidNum end

      ! randomly rotate along Z
      calc rotang = 360.0 * ?rand
      coor rotate zdir 1.0 phi @rotang select segid L@LipidNum end

      ! flip the orientation of the lipids in the lower monolayer if head Z le 0
      coor stat sele segid HEAD .and. resid @LipidNum end
      if ?ZMIN le 0  coor rotate xdir 1.0  phi 180.0 select segid L@LipidNum end

      ! put the head group at the location of the spheres
      coor stat sele segid HEAD .and. resid @LipidNum end
      if ?ZMIN gt 0.0 coor trans xdir ?XMIN ydir ?YMIN zdir  @ZPosTOP select segid L@LipidNum end
      if ?ZMIN le 0.0 coor trans xdir ?XMIN ydir ?YMIN zdir -@ZPosTOP select segid L@LipidNum end

      set xhead = ?xave
      set yhead = ?yave
      set zhead = ?zave
      set rhead = ?wave

      set nbad = 5
      ! increase the lipid bad contact limit for cardiolipin
      if lipid .eq. TMCL1  set nbad = 10
      if lipid .eq. TMCL2  set nbad = 10
      if lipid .eq. PMCL1  set nbad = 10
      if lipid .eq. PMCL2  set nbad = 10
      if lipid .eq. PAICL2 set nbad = 10
      if lipid .eq. PVCL2  set nbad = 10
      if lipid .eq. POCL1  set nbad = 10
      if lipid .eq. POCL2  set nbad = 10
      if lipid .eq. TYCL1  set nbad = 10
      if lipid .eq. TYCL2  set nbad = 10
      if lipid .eq. TOCL1  set nbad = 10
      if lipid .eq. TOCL2  set nbad = 10
      if lipid .eq. LOACL1 set nbad = 10
      if lipid .eq. LOACL2 set nbad = 10
      if lipid .eq. LOCCL1 set nbad = 10
      if lipid .eq. LOCCL2 set nbad = 10
      if lipid .eq. TLCL1  set nbad = 10
      if lipid .eq. TLCL2  set nbad = 10
      if lipid .eq. LNCCL1 set nbad = 10
      if lipid .eq. LNCCL2 set nbad = 10
      if lipid .eq. LNACL1 set nbad = 10
      if lipid .eq. LNACL2 set nbad = 10
      if lipid .eq. LNDCL1 set nbad = 10
      if lipid .eq. LNDCL2 set nbad = 10
      if lipid .eq. LNBCL1 set nbad = 10
      if lipid .eq. LNBCL2 set nbad = 10
      if lipid .eq. ARCL2  set nbad = 10

      !
      ! check whether the lipid penetrates the protein (or cholesterol)
      !

      calc delang    = 35.0   ! rotation increment
      calc delxy     =  1.0   ! xy translation increment

      define target sele segid L@LipidNum end

      coor stat sele target end
      calc dcut = 5.0
      calc xmax = ?xmax + @dcut
      calc ymax = ?ymax + @dcut
      calc zmax = ?zmax + @dcut
      calc xmin = ?xmin - @dcut
      calc ymin = ?ymin - @dcut
      calc zmin = ?zmin - @dcut

      calc Xhalf = @A / 2
      calc Yhalf = @B / 2

      define prxp sele ( prop X .ge. @Xhalf ) .and. .not. target end
      set nprxp = ?nsel
      if nprxp .gt. 0 coor trans xdir -@A sele prxp end
      define pryp sele ( prop Y .ge. @Yhalf ) .and. .not. target end
      set npryp = ?nsel
      if npryp .gt. 0 coor trans ydir -@B sele pryp end
      define prxn sele ( prop X .le. -@Xhalf ) .and. .not. target end
      set nprxn = ?nsel
      if nprxn .gt. 0 coor trans xdir @A sele prxn end
      define pryn sele ( prop Y .le. -@Yhalf ) .and. .not. target end
      set npryn = ?nsel
      if npryn .gt. 0 coor trans ydir @B sele pryn end

      define imxp sele none end
      define imyp sele none end
      define imxn sele none end
      define imyn sele none end

      set nimxp = 0
      set nimyp = 0
      set nimxn = 0
      set nimyn = 0

      if xmax .gt. @Xhalf then
         calc xdiff = -@A + @xmax
         define imxp sele prop X .le. @xdiff end
         set nimxp = ?nsel
         if nimxp .gt. 0 coor trans xdir @A sele imxp end
      endif
      if ymax .gt. @Yhalf then
         calc ydiff = -@B + @ymax
         define imyp sele prop Y .le. @ydiff end
         set nimyp = ?nsel
         if nimyp .gt. 0 coor trans ydir @B sele imyp end
      endif
      if xmin .lt. -@Xhalf then
         calc xdiff = @A + @xmin
         define imxn sele prop X .ge. @xdiff end
         set nimxn = ?nsel
         if nimxn .gt. 0 coor trans xdir -@A sele imxn end
      endif
      if ymin .lt. -@Yhalf then
         calc ydiff = @B + @ymin
         define imyn sele prop Y .ge. @ydiff end
         set nimyn = ?nsel
         if nimyn .gt. 0 coor trans ydir -@B sele imyn end
      endif

      define JUNK sele .not. target .and. .not. hydrogen .and. -
                       prop X .lt. @xmax .and. prop X .gt. @xmin .and. -
                       prop Y .lt. @ymax .and. prop Y .gt. @ymin .and. -
                       prop Z .lt. @zmax .and. prop Z .gt. @zmin  end

      calc xmove = 0.0
      calc ymove = 0.0
      calc nxymove = 1

      label doxymove

         if nxymove .eq. 2 incr xmove by 1
         if nxymove .eq. 3 incr ymove by 1
         if nxymove .eq. 4 decr xmove by 1
         if nxymove .eq. 5 decr xmove by 1
         if nxymove .eq. 6 decr ymove by 1
         if nxymove .eq. 7 decr ymove by 1
         if nxymove .eq. 8 incr xmove by 1
         if nxymove .eq. 9 incr xmove by 1

         calc xtran = @xhead + @xmove
         calc ytran = @yhead + @ymove

         calc rotang = 0.0
         label dorot

            coor rotate zdir 1.0 xcen @xtran ycen @ytran zcen @zhead phi @rotang sele target end

            set dotrans = 1
            label doclash
               if dotrans .eq. 2 coor trans xdir  1.0 ydir  1.0 dist 0.71 sele target end
               if dotrans .eq. 3 coor trans xdir  1.0 ydir -1.0 dist 0.71 sele target end
               if dotrans .eq. 4 coor trans xdir -1.0 ydir  1.0 dist 0.71 sele target end
               if dotrans .eq. 5 coor trans xdir -1.0 ydir -1.0 dist 0.71 sele target end

               if issterol .eq. yes then
                  coor dist cut 1.0 sele segid L@LipidNum .and. ( type c% .or. type c1* ) end  -
                                         sele .not. ( segid L@LipidNum .or. type POLO .or. resname TIP3 ) .and. JUNK end
                  if ?npair gt 0 goto domorerot
               else
                  if nsterol .gt. 0 then
                     ! to prevent the penetration of lipid molecules into cholesterol rings
                     coor dist cut 1.0 sele segid L@LipidNum .and. .not. resname TIP3 .and. .not. hydrogen end  -
                                            sele STEROL .and. ( type c% .or. type c1* ) .and. JUNK end
                     if ?npair gt 10 goto domorerot
                  endif

                  !lipid-check
                  !
                  coor dist cut 1.2 sele segid L@LipidNum .and. .not. resname TIP3 .and. .not. hydrogen end  -
                                         sele .not. ( segid L@LipidNum .or. type POLO .or. resname TIP3 .or. PROT ) .and. JUNK end
                  if ?npair gt @nbad goto domorerot
               endif

               if dotrans .eq. 2 coor trans xdir -1.0 ydir -1.0 dist 0.71 sele target end
               if dotrans .eq. 3 coor trans xdir -1.0 ydir  1.0 dist 0.71 sele target end
               if dotrans .eq. 4 coor trans xdir  1.0 ydir -1.0 dist 0.71 sele target end
               if dotrans .eq. 5 coor trans xdir  1.0 ydir  1.0 dist 0.71 sele target end

            incr dotrans by 1
            if dotrans .le. 5 goto doclash

            if nimyn .gt. 0 coor trans ydir @B sele imyn end
            if nimxn .gt. 0 coor trans xdir @A sele imxn end
            if nimyp .gt. 0 coor trans ydir -@B sele imyp end
            if nimxp .gt. 0 coor trans xdir -@A sele imxp end

            if npryn .gt. 0 coor trans ydir -@B sele pryn end
            if nprxn .gt. 0 coor trans xdir -@A sele prxn end
            if npryp .gt. 0 coor trans ydir @B sele pryp end
            if nprxp .gt. 0 coor trans xdir @A sele prxp end

            goto nextlipid

         label domorerot
         increase rotang by @delang
         if rotang .le. 359 goto dorot

         label domorexymove

         coor trans xdir -@xmove ydir -@ymove sele target end
      increase nxymove by 1
      if nxymove .le. 9 goto doxymove

      if nimyn .gt. 0 coor trans ydir @B sele imyn end
      if nimxn .gt. 0 coor trans xdir @A sele imxn end
      if nimyp .gt. 0 coor trans ydir -@B sele imyp end
      if nimxp .gt. 0 coor trans xdir -@A sele imxp end

      if npryn .gt. 0 coor trans ydir -@B sele pryn end
      if nprxn .gt. 0 coor trans xdir -@A sele prxn end
      if npryp .gt. 0 coor trans ydir @B sele pryp end
      if nprxp .gt. 0 coor trans xdir @A sele prxp end

      delete atoms sele segid L@LipidNum end
      goto repeatrand

      label nextlipid

   ! continue for total number of lipids that are needed
   incr LipidNum by 1

if LipidNum le @NLipid goto loop_gen

!==============================================================================
! delete the vdW spheres
delete atom sele type POLO .or. segid DUM  end

!==============================================================================
! separate Lipid and Water
!

define water sele resn TIP3 .and. type OH2 end
set nwater = ?nsel

open write unit 10 card name step4_lipid.psf
write psf  unit 10 card

open write unit 10 card name step4_lipid.crd
write coor unit 10 card
close unit 10

if nwater .ne. 0 then
   delete atom sele .not. resname TIP3 end

   set cnt = 1
   label jointip3
      define TIP3 sele segid L* .and. resname TIP3 end
      if ?nsel .eq. 0 goto exitjointip3

      if cnt eq 1 then
         rename segid TIP3 sele segid ?SELSEGI end
         join TIP3 renumber
      endif
      if cnt gt 1 join TIP3 ?SELSEGI renumber

      increase cnt by 1
   goto jointip3
   label exitjointip3

   open write unit 10 card name step4_lipid_water.crd
   write coor unit 10 card
   close unit 10
endif

delete atom sele all end

open read unit 10 card name step4_lipid.psf
read psf  unit 10 card

open read unit 10 card name step4_lipid.crd
read coor unit 10 card

define NONMEMB sele resn TIP3 end

if ?nsel .gt. 0 delete atom sele NONMEMB end

set cnt = 1
label joinmemb
   define MEMB sele segid L* end
   if ?nsel .eq. 0 goto exitjoinmemb

   if cnt eq 1 rename segid MEMB sele segid ?SELSEGI end
   if cnt gt 1 join MEMB ?SELSEGI renumber

   increase cnt by 1
goto joinmemb
label exitjoinmemb

if hasring .eq. yes BOMLEV -1
autogen angle dihedral
if hasring .eq. yes BOMLEV 0

open write unit 10 card name step4_lipid_lipid.psf
write psf  unit 10 card

open write unit 10 card name step4_lipid_lipid.crd
write coor unit 10 card

! check if there is lipids with three membered ring
define tris sele chem CG3C31 end
set ntri = ?nsel
if ntri .ne. 0 bomlev -1  ! some bacterial lipids have three membered ring

delete atom sele all end

!==============================================================================
! Read all individuals back
!

! Read Lipids
open read unit 10 card name step4_lipid_lipid.psf
read psf  unit 10 card append

open read unit 10 card name step4_lipid_lipid.crd
read coor unit 10 card append

! Read Water
if nwater .gt. 0 then
   open read card unit 10 name step4_lipid_water.crd
   read sequence coor card unit 10
   generate TIP3 setup warn noangle nodihedral

   open read unit 10 card name step4_lipid_water.crd
   read coor unit 10 card resid
endif

!==============================================================================
! Write the coordinates
!

open write unit 10 card name step4_lipid.psf
write psf  unit 10 card

open write unit 10 card name step4_lipid.pdb
write coor unit 10 pdb
close unit 10

open write unit 10 card name step4_lipid.crd
write coor unit 10 card
close unit 10

open write card  unit 51 name step4_components.str
write title unit 51
* set nwater = @nwater
*

if ntri .ne. 0 then
   write title unit 51
   * bomlev -1 ! due to three membered ring
   *
endif


stop
